name: Ironworker CI
on: [push, pull_request]
concurrency:
  group: build-${{ github.ref || github.event.pull_request.number }}
  cancel-in-progress: true

env:
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1
  # These are for the AWS SDK to be able to connect to ElasticMQ locally
  AWS_DEFAULT_REGION: local
  AWS_ACCESS_KEY_ID: fake
  AWS_SECRET_ACCESS_KEY: fake

jobs:
  tests-pass:
    name: Checks complete
    runs-on: ubuntu-latest
    needs:
      - test
      - rustfmt-and-clippy
      - doc
    steps:
      - run: exit 0

  test:
    name: "ðŸ™‰ Test ${{ matrix.rust }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
          - nightly
    steps:
      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-${{ matrix.backend }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        name: "Install ${{matrix.rust}}"
        with:
          toolchain: ${{matrix.rust}}
          override: true
          profile: minimal
      - uses: actions-rs/cargo@v1
        with:
          command: test

  rustfmt-and-clippy:
    name: "ðŸ™ˆ Check linting and run clippy"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.54.0
          profile: minimal
          components: clippy, rustfmt
          override: true
      
      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: clippy-cargo-${{ hashFiles('**/Cargo.toml') }}
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  doc:
    name: "ðŸ™Š Run docs"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: docs-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: "Cargo docs"
        run: cargo doc --lib --no-deps --all-features --document-private-items
        env:
          RUSTFLAGS: --cfg docsrs
          RUSTDOCFLAGS: --cfg docsrs -Dwarnings
  
  coverage: 
    name: "ðŸ“¶ Test Coverage"
    runs-on: ubuntu-latest
    steps:
      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: coverage-cargo-${{ hashFiles('**/Cargo.toml') }}
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.54.0
          override: true
          profile: minimal
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: '-- --test-threads 1'

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          verbose: true

      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: cobertura.xml